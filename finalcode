#include <Wire.h>
#include <rgb_lcd.h>
#include <Bridge.h>
#include <Process.h>

rgb_lcd lcd;

const int buttonPin = 7; 
const int buzzerPin = 8;  
const int ledPin = 5;     

bool isAlertActive = true; 
bool buttonState = true;  
bool alertState = true;   
bool lastButton = HIGH;   
bool debounce = false;
unsigned long debounceTime = 50; 
unsigned long lastDebounceTime = 0;


String pushingboxURL = "http://api.pushingbox.com/pushingbox";
String emailDeviceID = "v0200C76CEAC801B";  
String sheetDeviceID = "v3A3A048C2D3951C";  


unsigned long lastFlashTime = 0;
unsigned long flashInterval = 500; 
unsigned long lastBuzzerTime = 0;
unsigned long buzzerInterval = 1000; 

void setup() {
  lcd.begin(16, 2);
  lcd.setRGB(255, 0, 0);  
  lcd.setCursor(0, 0);
  lcd.print("WARNING!!");

  Serial.begin(9600);
  Bridge.begin();

  pinMode(buttonPin, INPUT_PULLUP);  
  pinMode(buzzerPin, OUTPUT);
  pinMode(ledPin, OUTPUT);

  digitalWrite(buzzerPin, HIGH); 
  digitalWrite(ledPin, HIGH);   

  delay(5000);

  Serial.println("Setup complete.");
}

void loop() {
  bool reading = digitalRead(buttonPin);

 
  if (reading != lastButton) {
    lastDebounceTime = millis();
    debounce = true;
  }

  if (debounce && (millis() - lastDebounceTime) > debounceTime) {
    if (reading == LOW) { 
      buttonState = !buttonState; 
      alertState = !alertState;   
      isAlertActive = !isAlertActive; 

     
      if (isAlertActive) {
        sendToPushingBox(pushingboxURL + "?devid=" + emailDeviceID);  
      }

      String sheetURL = pushingboxURL + "?devid=" + sheetDeviceID +
                        "&ButtonState=" + (buttonState ? "On" : "Off") +
                        "&AlertState=" + (alertState ? "High" : "Low");
      sendToPushingBox(sheetURL);

    
      if (isAlertActive) {
        lcd.setRGB(255, 0, 0); 
        lcd.setCursor(0, 0);
        lcd.print("WARNING!!");
        digitalWrite(buzzerPin, HIGH); 
        digitalWrite(ledPin, HIGH);   
      } else {
        lcd.setRGB(0, 0, 0);  
        lcd.clear();          
        digitalWrite(buzzerPin, LOW); 
        digitalWrite(ledPin, LOW);   
      }

      delay(2000);  
    }
    debounce = false;
  }

  lastButton = reading; 

  if (isAlertActive) {
    unsigned long currentMillis = millis();

    
    if (currentMillis - lastFlashTime >= flashInterval) {
      lastFlashTime = currentMillis;
      int ledState = digitalRead(ledPin);
      digitalWrite(ledPin, ledState == HIGH ? LOW : HIGH);  
    }

    if (currentMillis - lastBuzzerTime >= buzzerInterval) {
      lastBuzzerTime = currentMillis;
      int buzzerState = digitalRead(buzzerPin);
      digitalWrite(buzzerPin, buzzerState == HIGH ? LOW : HIGH); 
    }
  }
}


void sendToPushingBox(String url) {
  Serial.println("Sending request to PushingBox...");

  Process p;
  p.begin("curl");
  p.addParameter(url);
  p.run();  

  while (p.available()) {
    char c = p.read();
    Serial.print(c);
  }
  Serial.println();

  Serial.println("PushingBox request sent!");
}
